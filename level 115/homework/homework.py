# დავალება:
# ქვემოთ მოცემული კოდი უნდა აბრუნებდეს რიცხვის ციფრთა ჯამს, მაგრამ შეცდომაა.
# წაიკითხე კოდი.*
# იპოვე შეცდომა(ები).
# გაასწორე და სწორად დაწერე.
# def sum_digits(n):
#     result = 0
#     while n > 0:
#         result += n % 10
#         n // 10
#     return result

def sum_digits(n):
    result = 0
    while n > 0:
        result += n % 10
        n = n // 10
    return result

print(sum_digits(123))  # მოსალოდნელი შედეგი: 6 (1 + 2 + 3)
print(sum_digits(405))  # მოსალოდნელი შედეგი: 9 (4 + 0 + 5)

# დამატებითი კითხვები:
# ✅ კოდის გაშვების გარეშე შეგიძლია იპოვო შეცდომა?
# შეცდომა მდგომარეობდა იმაში, რომ არ ხდებოდა n-ის განახლება ყოველი იტერაციის შემდეგ, რაც იწვევდა უსასრულო ლუპს.

# ✅ როგორ შეიძლება კოდი ისე შეცვალო, რომ უარყოფითი რიცხვებიც იმუშაოს სწორად?
def sum_digits(n):
    n = abs(n) # n რიცხვს წინასწარ მოვუშორებთ მინუსის ნიშანს
    result = 0
    while n > 0:
        result += n % 10
        n = n // 10
    return result
print(sum_digits(-405)) 

#-------------------------------------------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------------------------------------------

# დავალება 2: ქვემოთ მოცემულია Python კოდი, რომელიც უნდა აბრუნებდეს ორი უდიდესი განსხვავებული რიცხვის ჯამს სიაში, მაგრამ კოდი არასწორად მუშაობს.
# წაიკითხე კოდი ყურადღებით.
# იპოვე შეცდომა(ები). (აქაც გაშვების გარეშე)
# შესწორებული კოდი დაწერე.
# def sum_two_largest(lst):
#     if len(lst) < 2:
#         return None

#     max1 = max(lst)
#     max2 = max(lst)

#     return max1 + max2

def sum_two_largest(lst):
    if len(lst) < 2:
        return None
    return sum(sorted(lst)[-2:]) # დავასორტირებთ სიას ზრდადობის მიხედვით და შევკრიბავთ ბოლო ორ რიცხვს

print(sum_two_largest([3, 7, 2, 9, 5]))  # მოსალოდნელი შედეგი: 16 (9 + 7)
print(sum_two_largest([10, 10, 5, 3]))   # მოსალოდნელი შედეგი: 20 (10 + 10)

# დამატებითი კითხვა:
# ✅ კოდის შეცვლის გარეშე შეგიძლია იპოვო რა არასწორად მუშაობს?
# max ფუნქცია ეძებს მხოლოდ ერთ, უდიდეს რიცხვს სიაში(ანუ [3, 7, 2, 9, 5]-ის შემთხვევაში ორივე ცვლადში ინახებოდა 9). თუ მას მეორეჯერ გამოვიყენებთ, ეს არ ნიშნავს რომ მეორე უდიდეს რიცხვს დაგვიბრუნებს.